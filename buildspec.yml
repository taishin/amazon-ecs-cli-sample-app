version: 0.2

env:
  variables:
    ECR_REPOSITORY_NAME: demo/api
    DOCKER_BUILDKIT: "1"

phases:
  install:
    runtime-versions:
      golang: 1.15
  pre_build:
    commands: 
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - IMAGE_TAG=$(echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} | cut -c 1-7)
  build:
    commands:
      - docker build --rm --no-cache -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '{"name":"%s","ImageURI":"%s"}' $ECR_REPOSITORY_NAME $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
      - aws ecs describe-task-definition --task-definition proofrog-exp-demo --query 'taskDefinition' | sed 's/"image":.*demo\/api.*,/"image": "<IMAGE1_NAME>",/' > taskdef.json

artifacts:
  files:
    - imageDetail.json
    - taskdef.json

